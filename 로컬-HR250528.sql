-- SUSAN이 속한 부서의 사원이름, 부서번호, 부서명을 출력(INNER JOIN, EMPLOYEES, DEPARTMENTS)
SELECT E.FIRST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME 
FROM EMPLOYEES E, DEPARTMENTS D WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID AND UPPER(E.FIRST_NAME) = UPPER('SUSAN');

-- SUB QUERY 이용 시
SELECT DEPARTMENT_ID, DEPARTMENT_NAME 
FROM DEPARTMENTS WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE UPPER(FIRST_NAME) = UPPER('SUSAN'));

-- Susan 또는 Lex와 월급이 같은 직원의 이름, 업무, 급여를 출력하는 SELECT 문 작성(Susan,Lex는 제외)
SELECT FIRST_NAME, JOB_ID, SALARY
FROM EMPLOYEES
WHERE SALARY = (
    SELECT SALARY
    FROM EMPLOYEES
    WHERE UPPER(FIRST_NAME) IN('SUSAN', 'LEX'))
AND UPPER(FIRST_NAME) IN('SUSAN', 'LEX');

-- 30번 소속 직원들 중에서 급여를 가장 많이 받는 사원보다 더 많은 급여를 받는 사람의 이름, 급여를 출력
SELECT MAX(SALARY) FROM EMPLOYEES WHERE DEPARTMENT_ID = 30;
SELECT FIRST_NAME, SALARY FROM EMPLOYEES WHERE SALARY > (SELECT MAX(SALARY) FROM EMPLOYEES WHERE DEPARTMENT_ID = 30);
SELECT DEPARTMENT_ID, MAX(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID;

-- 테이블 구조만 복사
DROP TABLE EMP03;
CREATE TABLE EMP03
AS
SELECT * FROM EMPLOYEES WHERE 1 = 0;
SELECT * FROM EMP03;
DESC EMP03;

-- DEPARTMENTS 구조 복사 DEPT01 로
CREATE TABLE DEPT10
AS SELECT * FROM DEPARTMENTS WHERE 1 = 0;
SELECT * FROM DEPT10;
-- 10번 부서의 지역번호(1700)를 40번 부서의 지역번호(2400)로 변경하기 (SUB QUERY 사용)
SELECT * FROM DEPARTMENTS WHERE DEPARTMENT_ID = 10;
SELECT * FROM DEPARTMENTS WHERE DEPARTMENT_ID = 40;
UPDATE DEPARTMENTS SET LOCATION_ID = (SELECT LOCATION_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID = 10) WHERE DEPARTMENT_ID = 40;

-- VIEW
CREATE VIEW VIEW_EMP01
AS
SELECT EMPLOYEE_ID, FIRST_NAME, DEPARTMENT_ID 
FROM EMPLOYEES 
WHERE DEPARTMENT_ID = 10 ORDER BY EMPLOYEE_ID ASC;

-- 과제

-- [문제 1] EMPLOYEES 테이블에서 CEO에게 보고하는 직원의 모든 정보를 출력하는 SELECT문을 작성하시오.
SELECT * FROM EMPLOYEES WHERE MANAGER_ID = 100;

-- [문제 2] EMPLOYEES 테이블에서 Accounting 부서에서 근무하는 직원과 같은 업무를 하는 직원의 이름, 업무명를 출력하는 SELECT문을 작성하시오.
SELECT E.FIRST_NAME, E.JOB_ID FROM DEPARTMENTS D, EMPLOYEES E 
WHERE D.DEPARTMENT_ID = E.DEPARTMENT_ID AND D.DEPARTMENT_NAME = 'Accounting';

-- [문제 3] 직급이 'ST_MAN'인 직원이 받는 급여들의 최소 급여보다 많이 받는 직원들의 이름과 급여를 출력하되 부서번호가 20번인 직원은 제외한다.
SELECT FIRST_NAME, SALARY FROM EMPLOYEES WHERE JOB_ID = 'ST_MAN';
SELECT FIRST_NAME, SALARY, DEPARTMENT_ID FROM EMPLOYEES 
WHERE SALARY > (SELECT MIN(SALARY) FROM EMPLOYEES WHERE JOB_ID = 'ST_MAN') AND DEPARTMENT_ID <> 20 ORDER BY SALARY;

-- [문제 4] EMPLOYEES 테이블에서 Valli라는 이름을 가진 직원과 업무명 및 월급이 같은 사원의 모든 정보 를 출력하는 SELECT문을 작성하시오. (결과에서 Valli는 제외)
SELECT * 
FROM EMPLOYEES 
WHERE (JOB_ID, SALARY) IN (
    SELECT JOB_ID, SALARY 
    FROM EMPLOYEES 
    WHERE UPPER(FIRST_NAME) = 'VALLI'
)
AND UPPER(FIRST_NAME) <> 'VALLI';

SELECT * FROM EMPLOYEES;

-- [문제 5] EMPLOYEES 테이블에서 월급 ‘Valli’가 속한 부서의 평균 월급보다 높은 사원의 부서번호, 이름, 급여를 출력하는 SELECT문을 작성하시오.
SELECT DEPARTMENT_ID, FIRST_NAME, SALARY FROM EMPLOYEES 
WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES 
WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE UPPER(FIRST_NAME) = 'VALLI')) ORDER BY SALARY;
