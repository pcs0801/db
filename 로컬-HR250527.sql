CREATE TABLE DEPT01(
    DEPTNO NUMBER(2),
    DNAME VARCHAR2(14),
    LOC VARCHAR2(13),
    CONSTRAINT DEPT01_PK PRIMARY KEY(DEPTNO)
    );
    INSERT INTO DEPT01 VALUES(10, 'ACCOUNTING', 'NEW YORK');
    INSERT INTO DEPT01 VALUES(20, 'RESEARCH', 'DALLAS');
    SELECT * FROM DEPT01;
    
    INSERT INTO DEPT01 VALUES(30, 'DEVELOPMENT', 'KOREA');
    DELETE FROM DEPT01 WHERE DEPTNO = 10;
    
    
    CREATE TABLE EMP01(
        EMPNO NUMBER(4),
        ENAME VARCHAR2(10) NOT NULL, 
        JOB VARCHAR2(9),
        DEPTNO NUMBER(4), 
        PRIMARY KEY(EMPNO),
        FOREIGN KEY(DEPTNO) REFERENCES DEPT01(DEPTNO)
    );
      
    INSERT INTO EMP01 VALUES(7499, 'ALLEN', 'SALESMAN', 10);
    INSERT INTO EMP01 VALUES(7369, 'SMITH', 'CLERK', 20);
    SELECT * FROM EMP01;
    UPDATE EMP01 SET DEPTNO = 20 WHERE EMPNO = 7499;
    DELETE FROM EMP01 WHERE EMPNO = 7369;
    
    -- CROSS JOIN
    SELECT * FROM EMPLOYEES;
    SELECT * FROM DEPARTMENTS;
    SELECT * FROM EMPLOYEES, DEPARTMENTS;
    
    -- INNER JOIN(PK : 부모, 참조 = FK : 자식, 기본, 주)
    SELECT * FROM EMPLOYEES;
    SELECT * FROM DEPARTMENTS;
    SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'EMPLOYEES';
    SELECT E.FIRST_NAME, D.DEPARTMENT_ID, D.DEPARTMENT_NAME FROM EMPLOYEES E, DEPARTMENTS D
    WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID;
    
    CREATE TABLE SALARYGRADE
        (GRADE NUMBER(2),
        MINSALARY NUMBER(7),
        MAXSALARY NUMBER(10)
        );
    
    INSERT INTO SALARYGRADE (GRADE, MINSALARY, MAXSALARY) VALUES(1, 2000, 3000);
INSERT INTO SALARYGRADE (GRADE, MINSALARY, MAXSALARY) VALUES(2, 3001, 4500);
INSERT INTO SALARYGRADE (GRADE, MINSALARY, MAXSALARY) VALUES(3, 4501, 6000);
INSERT INTO SALARYGRADE (GRADE, MINSALARY, MAXSALARY) VALUES(4, 6001, 8000);
INSERT INTO SALARYGRADE (GRADE, MINSALARY, MAXSALARY) VALUES(5, 8001, 10000);
INSERT INTO SALARYGRADE (GRADE, MINSALARY, MAXSALARY) VALUES(6, 10001, 13000);
INSERT INTO SALARYGRADE (GRADE, MINSALARY, MAXSALARY) VALUES(7, 13001, 20000);
INSERT INTO SALARYGRADE (GRADE, MINSALARY, MAXSALARY) VALUES(8, 20001, 30000);
    
    SELECT E.FIRST_NAME, E.SALARY, S.GRADE 등급 FROM EMPLOYEES E, SALARYGRADE S
    WHERE E.SALARY BETWEEN S.MINSALARY AND S.MAXSALARY; 
    
-- 2007년 상반기에 입사한 사원 조회
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, E.DEPARTMENT_ID, D.DEPARTMENT_NAME FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID AND (HIRE_DATE BETWEEN '2007/01/01' AND '2007/06/30');

-- SELF JOIN (1개의 테이블을 2개로 만들어 조인한다고 생각)
SELECT * FROM EMPLOYEES;
SELECT E2.EMPLOYEE_ID 사원아이디, E2.FIRST_NAME 사원이름, E2.SALARY 사원월급, E1.MANAGER_ID 상사아이디, E1.FIRST_NAME 상사이름, E1.SALARY 상사월급 
FROM EMPLOYEES E1, EMPLOYEES E2 
WHERE E1.EMPLOYEE_ID = E2.MANAGER_ID;

-- OUTER JOIN (ANSI RIGHT OUTER JOIN)
SELECT E.FIRST_NAME, D.DEPARTMENT_ID, D.DEPARTMENT_NAME 
FROM EMPLOYEES E RIGHT OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

-- OUTER JOIN (ANSI LEFT OUTER JOIN)
SELECT E.FIRST_NAME, D.DEPARTMENT_ID, D.DEPARTMENT_NAME 
FROM EMPLOYEES E LEFT OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

-- ROWNUM (번호 자동 설정)
SELECT * FROM EMPLOYEES WHERE ROWNUM <= 10;

SELECT * FROM EMPLOYEES ORDER BY SALARY DESC;
SELECT FIRST_NAME, SALARY FROM (SELECT * FROM EMPLOYEES ORDER BY SALARY DESC) WHERE ROWNUM <=10;

-- Q. Sales 부서 소속 사원의 이름과 입사일을 출력
SELECT * FROM DEPARTMENTS;
SELECT * FROM EMPLOYEES;

SELECT E.DEPARTMENT_ID, D.DEPARTMENT_NAME, E.FIRST_NAME, E.HIRE_DATE
FROM EMPLOYEES E
JOIN DEPARTMENTS D
  ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE D.DEPARTMENT_NAME = 'Sales';

-- Q. 커미션을 받는 직원의 이름과 그가 속한 부서명을 출력
SELECT E.FIRST_NAME, D.DEPARTMENT_NAME FROM EMPLOYEES E 
JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE E.COMMISSION_PCT IS NOT NULL;

-- Q. Guy과 동일한 부서에서 근무하는 직원의 이름과 부서번호를 출력
SELECT E2.FIRST_NAME, E2.DEPARTMENT_ID FROM EMPLOYEES E1
JOIN EMPLOYEES E2
ON E1.DEPARTMENT_ID = E2.DEPARTMENT_ID
WHERE E1.FIRST_NAME = 'Guy';

SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID = 30;

-- Q. 학과 테이블 생성
CREATE TABLE SUBJECT(
    NO NUMBER NOT NULL,
    S_NUM NUMBER(2) NOT NULL,
    S_NAME VARCHAR2(30) NOT NULL
);

ALTER TABLE SUBJECT ADD CONSTRAINT SUBJECT_PK PRIMARY KEY(NO);

INSERT INTO SUBJECT VALUES(01,01,'컴퓨터학과');
INSERT INTO SUBJECT VALUES(02,02,'교육학과');
INSERT INTO SUBJECT VALUES(03,03,'신문방송학과');
INSERT INTO SUBJECT VALUES(04,04,'인터넷비즈니스과');
INSERT INTO SUBJECT VALUES(05,05,'기술경영과');

SELECT * FROM SUBJECT;

-- Q. 학생 테이블 생성
CREATE TABLE STUDENT(
    NO NUMBER NOT NULL,
    SD_NUM NUMBER(8) NOT NULL,
    SD_NAME VARCHAR2(30) NOT NULL,
    SD_ID VARCHAR2(30) NOT NULL,
    SD_PASSWD VARCHAR2(30) NOT NULL,
    S_NUM NUMBER(2) NOT NULL,
    SD_JUMIN CHAR(13) NOT NULL,
    SD_PHONE CHAR(12) NOT NULL,
    SD_ADDRESS VARCHAR2(100) NOT NULL,
    SD_EMAIL VARCHAR2(50) NOT NULL,
    SD_DATE DATE
);

ALTER TABLE STUDENT ADD CONSTRAINT STUDENT_PK PRIMARY KEY(NO);
ALTER TABLE STUDENT MODIFY SD_JUMIN CHAR(14);
ALTER TABLE STUDENT MODIFY SD_PHONE CHAR(13);
ALTER TABLE STUDENT MODIFY SD_DATE DATE DEFAULT SYSDATE;

INSERT INTO STUDENT(NO, SD_NUM, SD_NAME, SD_ID, SD_PASSWD, S_NUM, SD_JUMIN, SD_PHONE, SD_ADDRESS, SD_EMAIL, SD_DATE) 
VALUES(01, 06010001, '김정수', 'javajsp', 'pw1', 01, '000101-3333333', '010-1234-5678', '서울시 서대문구 창전동', 'abcd@naver.com','20250101');

INSERT INTO STUDENT(NO, SD_NUM, SD_NAME, SD_ID, SD_PASSWD, S_NUM, SD_JUMIN, SD_PHONE, SD_ADDRESS, SD_EMAIL, SD_DATE) 
VALUES(02, 95010002, '김수현', 'jdbcmania', 'pw1', 02, '000101-3333333', '010-1234-5678', '서울시 서초구 양재동', 'abcd@naver.com','20250101');
INSERT INTO STUDENT(NO, SD_NUM, SD_NAME, SD_ID, SD_PASSWD, S_NUM, SD_JUMIN, SD_PHONE, SD_ADDRESS, SD_EMAIL, SD_DATE) 
VALUES(03, 06010001, '공지영', 'gonji', 'pw1', 03, '000101-3333333', '010-1234-5678', '부산광역시 해운대구 반송동', 'abcd@naver.com','20250101');
INSERT INTO STUDENT(NO, SD_NUM, SD_NAME, SD_ID, SD_PASSWD, S_NUM, SD_JUMIN, SD_PHONE, SD_ADDRESS, SD_EMAIL, SD_DATE) 
VALUES(04, 06010001, '조수영', 'water', 'pw1', 04, '000101-3333333', '010-1234-5678', '대전광역시 중구 은행동', 'abcd@naver.com','20250101');
INSERT INTO STUDENT(NO, SD_NUM, SD_NAME, SD_ID, SD_PASSWD, S_NUM, SD_JUMIN, SD_PHONE, SD_ADDRESS, SD_EMAIL, SD_DATE) 
VALUES(05, 06010001, '최경란', 'novel', 'pw1', 05, '000101-3333333', '010-1234-5678', '경기도 수원시 장안구 이목동', 'abcd@naver.com','20250101');
INSERT INTO STUDENT(NO, SD_NUM, SD_NAME, SD_ID, SD_PASSWD, S_NUM, SD_JUMIN, SD_PHONE, SD_ADDRESS, SD_EMAIL, SD_DATE) 
VALUES(06, 06010001, '안익태', 'korea', 'pw1', 01, '000101-3333333', '010-1234-5678', '본인의 주소', 'abcd@naver.com','20250101');
SELECT * FROM STUDENT;

-- Q. 과목 테이블 생성
CREATE TABLE LESSON(
    NO NUMBER NOT NULL,
    I_NUM NUMBER(8) NOT NULL,
    I_NAME VARCHAR2(30) NOT NULL
    );
    
ALTER TABLE LESSON ADD CONSTRAINT LESSON_PK PRIMARY KEY(NO);

-- Q. 수강 테이블 생성
CREATE TABLE TRAINEE(
    NO NUMBER NOT NULL,
    SD_NUM NUMBER(8) NOT NULL,
    I_NUM NUMBER(8) NOT NULL,
    T_SECTION VARCHAR2(30) NOT NULL,
    T_DATE DATE NOT NULL
    );
    
ALTER TABLE LESSON ADD CONSTRAINT LESSON_PK PRIMARY KEY(NO);
ALTER TABLE TRAINEE MODIFY T_DATE DATE DEFAULT SYSDATE;